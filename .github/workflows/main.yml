name: test
on: [push, pull_request]

env:
  CFLAGS: -Werror
  MAKEFLAGS: -j

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - packages:
            cc:
            exec: bash -c
          - packages: gcc-arm-linux-gnueabi libc6-dev-armel-cross qemu-user
            cc: arm-linux-gnueabi-gcc --static -mthumb
            exec: qemu-arm
          - packages: gcc-mips-linux-gnu gcc-mips-linux-gnu qemu-user
            cc: mips-linux-gnu-gcc --static
            exec: qemu-mips
          - packages: gcc-powerpc-linux-gnu libc6-dev-powerpc-cross qemu-user
            cc: powerpc-linux-gnu-gcc --static
            exec: qemu-ppc

    env:
      CC: ${{matrix.cc}}
      EXEC: \"--exec=${{matrix.exec}}\"

    steps:
      - uses: actions/checkout@v2
      - name: install
        run: |
          # need toml, also pip3 isn't installed by default?
          sudo apt-get install python3 python3-pip ${{matrix.packages}}
          sudo pip3 install toml
      # test configurations
      # make sure example can at least compile
      - name: test-example
        run: |
          sed -n '/``` c/,/```/{/```/d; p}' README.md > test.c && \
          make all CFLAGS+=" \
              -Duser_provided_block_device_read=NULL \
              -Duser_provided_block_device_prog=NULL \
              -Duser_provided_block_device_erase=NULL \
              -Duser_provided_block_device_sync=NULL \
              -include stdio.h"
      # normal+reentrant tests
      - name: test-default
        run: ./scripts/test.py -nrk $EXEC
      # NOR flash: read/prog = 1 block = 4KiB
      - name: test-nor
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_READ_SIZE=1 -DLFS_BLOCK_SIZE=4096
      # SD/eMMC: read/prog = 512 block = 512
      - name: test-emmc
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_READ_SIZE=512 -DLFS_BLOCK_SIZE=512
      # NAND flash: read/prog = 4KiB block = 32KiB
      - name: test-nand
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_READ_SIZE=4096 -DLFS_BLOCK_SIZE=\(32*1024\)
      # other extreme geometries that are useful for various corner cases
      - name: test-no-intrinsics
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_NO_INTRINSICS
      - name: test-byte-writes
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_READ_SIZE=1 -DLFS_CACHE_SIZE=1
      - name: test-block-cycles
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_BLOCK_CYCLES=1
      - name: test-odd-block-count
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_BLOCK_COUNT=1023 -DLFS_LOOKAHEAD_SIZE=256
      - name: test-odd-block-size
        run: ./scripts/test.py -nrk $EXEC
          -DLFS_READ_SIZE=11 -DLFS_BLOCK_SIZE=704

